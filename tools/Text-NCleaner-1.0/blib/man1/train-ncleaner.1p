.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TRAIN-NCLEANER 1"
.TH TRAIN-NCLEANER 1 "2008-03-22" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
train\-ncleaner \- Estimate NCleaner model from manually cleaned data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  train\-ncleaner [options] clean_texts/ dirty_texts/ new.model
\&
\&  train\-ncleaner \-\-diff [options] clean_texts/ raw_texts/ new.model
\&
\&  Options:
\&    \-n <n>   order of n\-gram models used for classification
\&    \-m <k>   text normalisation mode (0 .. 3)
\&    \-q <q>   default interpolation factor for n\-gram models 
\&             (between 0 and 1, larger values increase smoothing)
\&    \-b <b>   model bias (towards higher recall) in centibits
\&    \-v       display some progress messages
\&
\&  Default options: \-n 3 \-m 1 \-q .5 \-b 0
\&
\&  Type \*(Aqperldoc train\-ncleaner\*(Aq for more information.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBNCleaner\fR is a software tool that removes boilerplate and other unwanted
material from Web pages used for linguistic purposes.  It relies on simple
character-level n\-gram models for classification of text segments.  A detailed
description can be found in
.IP "\(bu" 4
Evert, Stefan (2008). A lightweight and efficient tool for cleaning Web
pages. In \fIProceedings of the 6th International Conference on Language
Resources and Evaluation\fR (\s-1LREC\s0 2008).
.PP
The command-line program \fBtrain-ncleaner\fR can be used to estimated a
\&\fBNCleaner\fR model from a manually cleaned gold standard.  It can either be
applied to separate sets of \*(L"clean\*(R" and \*(L"dirty\*(R" text, or to raw text dumps of
\&\s-1HTML\s0 pages and their manually cleaned versions (using differential training).
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.Vb 1
\&  train\-ncleaner [options] clean_texts/ dirty_texts/ new.model
.Ve
.PP
For \fBnormal training\fR, a directory containing samples of \*(L"clean\*(R" text and a
directory containing samples of \*(L"dirty\*(R" text have to be supplied, which must
be plain text files in \s-1UTF\-8\s0 encoding. Since all files in these directories
will be used, make sure to remove any extra files beforehand.  The trained
model will be saved under the name specified as third argument.
.PP
.Vb 1
\&  train\-ncleaner \-\-diff [options] clean_texts/ raw_texts/ new.model
.Ve
.PP
For \fBdifferential training\fR, raw text dumps and their manually cleaned
versions have to be supplied (in the two specified directories).  Only files
with identical names in both directories will be used.  As above, all samples
must be plain text files in \s-1UTF\-8\s0 encoding.  The trained model will be saved
under the name specified as third argument.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-differential\fR, \fB\-\-diff\fR, \fB\-d\fR" 4
.IX Item "--differential, --diff, -d"
Apply differential training procedure (see above).
.IP "\fB\-n\fR \fIN\fR" 4
.IX Item "-n N"
Order of n\-gram models that will be trained (allowing history sizes of up to
\&\fIN\fR\-1 characters).  The default value is \f(CW\*(C`\-n 3\*(C'\fR.
.IP "\fB\-\-mode\fR \fIM\fR, \fB\-m\fR \fIM\fR" 4
.IX Item "--mode M, -m M"
Text normalisation mode \fIM\fR.  Numeric values between 0 and 3 specifiy
increasingly heavy normalisation, with a default value of \f(CW\*(C`\-m 1\*(C'\fR.
.Sp
.Vb 4
\&    0 = minimal normalisation (only whitespace and control characters)
\&    1 = map all high\-bit characters (outside ASCII range) to "~"
\&    2 = map ASCII letters to "a" for vowels and "t" for consonants, digits to "0"
\&    3 = non\-lexical model, maps all ASCII letters to "a" and all digits to "0"
.Ve
.IP "\fB\-q\fR \fIQ\fR" 4
.IX Item "-q Q"
Default interpolation factor \fIQ\fR for the n\-gram models, which must be a
number between 0 and 1.  Values close to 1 lead to very strong smoothing,
while values close to 0 result in minimal smoothing.  See
Text::NCleaner::NGram and Evert (2008) for details on the interpolation
algorithm.
.IP "\fB\-\-bias\fR \fIb\fR, \fB\-b\fR \fIb\fR" 4
.IX Item "--bias b, -b b"
Model bias \fIb\fR given in centibits, which is added to the cross-entropy of the
\&\*(L"clean\*(R" model to control the tradeoff between recall and precision.  Positive
values lead to higher recall, while negative values increase precision.
Sensible values are typically found in the range between \-100 and 100.
.IP "\fB\-\-verbose\fR, \fB\-h\fR" 4
.IX Item "--verbose, -h"
Display some progress messages and other information during training.
.SH "AUTHOR"
.IX Header "AUTHOR"
Stefan Evert, \f(CW\*(C`<stefan.evert@uos.de>\*(C'\fR
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2008 Stefan Evert, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
